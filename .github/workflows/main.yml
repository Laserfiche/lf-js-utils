name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      publishProduction:
        description: 'Publish to npm production'
        type: boolean
        required: true
        default: 'false'
      publishPreview:
        description: 'Publish to npm preview'
        type: boolean
        required: true
        default: 'false'

env:
  MAJOR_VERSION: 2
  MINOR_VERSION: 0
  PATCH_VERSION: 2
  publishProduction: 'false'
  publishPreview: 'false'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: dummy
      NPM_USERNAME: dummy
      NPM_EMAIL: dummy
      NPM_REGISTRY: dummy
    steps:
      - uses: actions/checkout@v2
      
      - name: Echo build number
        run: echo ${{github.run_id}}

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version:  '14.x'

      # this step is for the DatetimeUtil unit tests in npm test, because Github workflow runner runs in UTC time by default
      - name: Set Timezone  
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: America/Los_Angeles
          timezoneMacos: America/Los_Angeles
          timezoneWindows: America/Los_Angeles
    
      - name: Npm install
        run: npm install
          
      - name: Npm run lint
        run: npm run lint
          
#       - name: Npm run test
#         run: npm run test:ci
          
      - name: Npm run build
        run: npm run build
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: npm-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./dist    

  publishNPM:
    runs-on: ubuntu-latest
    environment: publish
    needs: [ build ] # wait for build to finish
    if: ${{  github.event.inputs.publishPreview == 'true' || github.event.inputs.publishProduction == 'true' }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up variable -- publishProduction
        run: echo "publishProduction=${{ github.event.inputs.publishProduction }}" >> $GITHUB_ENV
        
      - name: set up variable -- publishPreview
        run: echo "publishPreview=${{ github.event.inputs.publishPreview }}" >> $GITHUB_ENV
        
      - name: set up variable -- NpmPackageVersion for prod
        if: ${{ env.publishProduction == 'true'}}
        run: echo "NpmPackageVersion=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}" >> $GITHUB_ENV
        
      - name: Set up variable -- NpmPackageVersion for preview
        if: ${{ env.publishProduction  == 'false'}}
        run: echo "NpmPackageVersion=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV
        
      - name: Echo NPM package version
        run: echo ${{ env.NpmPackageVersion }}
        
      - name: Npm version
        run: npm version ${{ env.NpmPackageVersion }} --no-git-tag-version
        
      - name: Download a Build Artifact -- dist
        uses: actions/download-artifact@v2.1.0
        with:
          name: npm-publish-artifact
          path: ./dist

      - name: Echo Workflow Input publishProduction
        run: echo ${{ env.publishProduction }}

      - name: Npm publish preview
        if: ${{ env.publishPreview == 'true' && env.publishProduction == 'false' }}
        run: npm publish  --access public  --tag next
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}
          
      - name: Npm publish production
        if: ${{ env.publishProduction == 'true' &&   github.ref_name == 'main' }}
        run: npm publish  --access public  --tag latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_REGISTRY: ${{ secrets.NPM_REGISTRY }}
